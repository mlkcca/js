{"version":3,"sources":["cache/span.js"],"names":["ts","data","tailTs","length","t","span","getTailTs","mergeData","Math","max","min","d1","d2","d","concat","idList","dd","filter","id","sort","a","b","limit","getData","slice"],"mappings":";;;;;;;;;;;AACC,iBAAYA,EAAZ,EAAgBC,IAAhB,EAAsB;AAAA;;AACrB,OAAKD,EAAL,GAAUA,EAAV;AACA,OAAKC,IAAL,GAAYA,IAAZ;AACA,OAAKC,MAAL,GAAc,KAAKD,IAAL,CAAU,KAAKA,IAAL,CAAUE,MAAV,GAAkB,CAA5B,EAA+BC,CAA7C;AACA;;;;0BAEOC,I,EAAM;AACb,OAAG,KAAKL,EAAL,IAAWK,KAAKC,SAAL,EAAX,IAA+BD,KAAKL,EAAL,IAAW,KAAKM,SAAL,EAA7C,EAA+D;AAC9D,SAAKL,IAAL,GAAY,KAAKM,SAAL,CAAe,KAAKN,IAApB,EAA0BI,KAAKJ,IAA/B,CAAZ;AACA,SAAKD,EAAL,GAAUQ,KAAKC,GAAL,CAAS,KAAKT,EAAd,EAAkBK,KAAKL,EAAvB,CAAV;AACA,SAAKE,MAAL,GAAcM,KAAKE,GAAL,CAAS,KAAKJ,SAAL,EAAT,EAA2BD,KAAKC,SAAL,EAA3B,CAAd;AACA,WAAO,IAAP;AACA,IALD,MAKK;AACJ,WAAO,KAAP;AACA;AACD;;;4BAESK,E,EAAIC,E,EAAI;AACjB,OAAIC,IAAIF,GAAGG,MAAH,CAAUF,EAAV,CAAR;AACA,OAAIG,SAAS,EAAb;AACA,OAAIC,KAAKH,EAAEI,MAAF,CAAS,UAAUJ,CAAV,EAAa;AAC9B,QAAGE,OAAOF,EAAEK,EAAT,CAAH,EAAiB;AAChB,YAAO,KAAP;AACA,KAFD,MAEK;AACJH,YAAOF,EAAEK,EAAT,IAAe,IAAf;AACA,YAAO,IAAP;AACA;AACK,IAPE,CAAT;AAQMF,MAAGG,IAAH,CAAQ,UAASC,CAAT,EAAYC,CAAZ,EAAe;AACtB,QAAGD,EAAEhB,CAAF,GAAMiB,EAAEjB,CAAX,EAAc,OAAO,CAAC,CAAR,CAAd,KACK,IAAGgB,EAAEhB,CAAF,GAAMiB,EAAEjB,CAAX,EAAc,OAAO,CAAP,CAAd,KACA,OAAO,CAAP;AACL,IAJD;AAKA,UAAOY,EAAP;AACN;;;8BAEW;AACX,UAAO,KAAKd,MAAZ;AACA;;;wBAEKF,E,EAAIsB,K,EAAO;AAChB,OAAG,KAAKtB,EAAL,IAAWA,EAAd,EAAkB;AACjB,QAAIC,OAAO,KAAKsB,OAAL,CAAavB,EAAb,CAAX;AACA,QAAGC,KAAKE,MAAL,IAAemB,KAAlB,EAAyB;AACxB,YAAOrB,KAAKuB,KAAL,CAAW,CAAX,EAAcF,KAAd,CAAP;AACA;AACD;AACD,UAAO,IAAP;AACA;;;0BAEOtB,E,EAAI;AACX,UAAO,KAAKC,IAAL,CAAUgB,MAAV,CAAiB,UAACJ,CAAD,EAAK;AAC5B,WAAOA,EAAET,CAAF,IAAOJ,EAAd;AACA,IAFM,CAAP;AAGA","file":"span.js","sourcesContent":["export default class {\n\tconstructor(ts, data) {\n\t\tthis.ts = ts;\n\t\tthis.data = data;\n\t\tthis.tailTs = this.data[this.data.length -1].t\n\t}\n\n\tcombine(span) {\n\t\tif(this.ts >= span.getTailTs() && span.ts >= this.getTailTs()) {\n\t\t\tthis.data = this.mergeData(this.data, span.data);\n\t\t\tthis.ts = Math.max(this.ts, span.ts)\n\t\t\tthis.tailTs = Math.min(this.getTailTs(), span.getTailTs())\n\t\t\treturn true;\n\t\t}else{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tmergeData(d1, d2) {\n\t\tlet d = d1.concat(d2);\n\t\tlet idList = {};\n\t\tvar dd = d.filter(function (d) {\n\t\t\tif(idList[d.id]) {\n\t\t\t\treturn false\n\t\t\t}else{\n\t\t\t\tidList[d.id] = true;\n\t\t\t\treturn true;\n\t\t\t}\n        });\n        dd.sort(function(a, b) {\n        \tif(a.t > b.t) return -1;\n        \telse if(a.t < b.t) return 1;\n        \telse return 0;\n        });\n        return dd;\n\t}\n\n\tgetTailTs() {\n\t\treturn this.tailTs;\n\t}\n\n\tquery(ts, limit) {\n\t\tif(this.ts >= ts) {\n\t\t\tlet data = this.getData(ts);\n\t\t\tif(data.length >= limit) {\n\t\t\t\treturn data.slice(0, limit);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tgetData(ts) {\n\t\treturn this.data.filter((d)=>{\n\t\t\treturn d.t <= ts;\n\t\t});\n\t}\n}"]}