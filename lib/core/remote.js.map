{"version":3,"sources":["core/remote.js"],"names":["ajax","require","host","port","secure","headers","path","params","_qs","_headers","qs","Object","assign","Promise","resolve","reject","request","JSON","stringify","err","data","content","pureURL","newParams","match","matched","replace","newQ","parse","cb","keys","forEach","k"],"mappings":"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","file":"remote.js","sourcesContent":["import querystring from 'querystring'\nvar ajax = require('./ajax')\n\nexport default class {\n  constructor (host, port, secure, headers) {\n    this.host = host\n    this.port = port\n    this.secure = secure\n    this.headers = headers\n  }\n\n  post (path, params, _qs, _headers) {\n    let qs = _qs || null\n    let headers = Object.assign({}, this.headers, _headers)\n    return new Promise((resolve, reject) => {\n      ajax.request('POST', this.secure, this.host, this.port, path, qs, JSON.stringify(params), headers, function (err, data) {\n        if (err) {\n          return reject(err)\n        }\n        if (data.err) {\n          return reject(data.err)\n        }\n        resolve(data.content)\n      })\n    })\n  }\n\n  get (path, params) {\n    /*\n    var qs = {};\n    Object.keys(params).forEach(function(k) {\n      qs[k] = JSON.stringify(params[k]);\n    })\n    */\n    return new Promise((resolve, reject) => {\n      var pureURL = path\n      var newParams = params\n      if (path.match(/(\\?.*$)/)) {\n        var matched = path.match(/(\\?.*$)/)[0]\n        pureURL = path.replace(matched, '')\n        var newQ = querystring.parse(matched.replace('?', ''))\n        newParams = Object.assign({}, newParams, newQ)\n      }\n\n      ajax.request('GET', this.secure, this.host, this.port, pureURL, newParams, null, this.headers, function (err, data) {\n        if (err) {\n          return reject(err)\n        }\n        /*\n        if(data.err) {\n          return reject(data.err);\n        }\n        */\n        resolve(data)\n      })\n    })\n  }\n\n  get2 (path, params, cb) {\n    var pureURL = path\n    var newParams = params\n    if (path.match(/(\\?.*$)/)) {\n      var matched = path.match(/(\\?.*$)/)[0]\n      pureURL = path.replace(matched, '')\n      var newQ = querystring.parse(matched.replace('?', ''))\n      newParams = Object.assign({}, newParams, newQ)\n    }\n    return ajax.request('GET', this.secure, this.host, this.port, pureURL, newParams, null, this.headers, function (err, data) {\n      if (err) {\n        return cb(err)\n      }\n      cb(null, data)\n    })\n  }\n\n  put (path, params) {\n    return new Promise((resolve, reject) => {\n      ajax.request('PUT', this.secure, this.host, this.port, path, null, JSON.stringify(params), this.headers, function (err, data) {\n        if (err) {\n          return reject(err)\n        }\n        if (data.err) {\n          return reject(data.err)\n        }\n        resolve(data.content)\n      })\n    })\n  }\n\n  delete (path, params) {\n    var qs = {}\n    Object.keys(params).forEach(function (k) {\n      qs[k] = JSON.stringify(params[k])\n    })\n    return new Promise((resolve, reject) => {\n      ajax.request('DELETE', this.secure, this.host, this.port, path, qs, null, this.headers, function (err, data) {\n        if (err) {\n          return reject(err)\n        }\n        if (data.err) {\n          return reject(data.err)\n        }\n        resolve(data.content)\n      })\n    })\n  }\n}\n"]}