{"version":3,"sources":["core/index.js"],"names":["options","appId","store","Error","uuid","getUUID","apiKey","accessToken","useSSL","hasOwnProperty","host","port","keepaliveTimeout","headers","remote","wsOptions","websocket","_getPubsubUrl","logger","console","WebSocket","keepalive","connect","version","set","currentUUID","get","disconnect","event","fn","on","ssl","apikey","base","stringify","api","appOptions","_getOptions","path","cb","apiUrl","_getApiUrl","params","then","result","err","content","catch","c","limit","_getRemote","dataStores","messages"],"mappings":"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","file":"index.js","sourcesContent":["import querystring from 'querystring'\nimport genUUID from 'uuid'\nimport packageJSON from '../../package.json'\nimport Pubsub from './pubsub'\nimport Remote from './remote'\nimport DataStore from './datastore'\n\nexport default class {\n  constructor (options) {\n    this.options = options\n    this.appId = options.appId\n    this.store = options.store\n    if (!this.appId) throw new Error('appId required')\n    if (!this.store) throw new Error('store required')\n    this.uuid = this.getUUID(options.uuid)\n    this.apiKey = options.apiKey\n    this.accessToken = options.accessToken\n    this.useSSL = options.hasOwnProperty('useSSL') ? options.useSSL : true\n    this.host = options.host || 'pubsub1.mlkcca.com'\n    this.port = options.port || 443\n    this.keepaliveTimeout = options.keepaliveTimeout || 300\n    let headers = {}\n    if (this.accessToken) headers['Authorization'] = 'Bearer ' + this.accessToken\n    this.remote = new Remote(this.host, this.port, this.useSSL, headers)\n    this.wsOptions = {\n      headers: headers\n    }\n    // websocket is unused\n    this.websocket = new Pubsub({\n      host: this._getPubsubUrl(this.useSSL, this.host, this.port, this.appId, this.apiKey, this.accessToken, this.uuid),\n      logger: console,\n      WebSocket: this.options.WebSocket,\n      wsOptions: this.wsOptions,\n      keepalive: options.keepalive || 36\n    }, this)\n    this.connect()\n  }\n\n  version () {\n    return packageJSON.version\n  }\n\n  getAppId () {\n    return this.appId\n  }\n\n  getUUID (uuid) {\n    if (uuid) {\n      this.store.set('uuid', uuid)\n    } else {\n      let currentUUID = this.store.get('uuid', uuid)\n      if (currentUUID) {\n        uuid = currentUUID\n      } else {\n        uuid = genUUID()\n        this.store.set('uuid', uuid)\n      }\n    }\n    return uuid\n  }\n\n  connect () {\n    this.websocket.connect()\n  }\n\n  disconnect () {\n    this.websocket.disconnect()\n  }\n\n  on (event, fn) {\n    this.websocket.on(event, fn)\n  }\n\n  // unused\n  _getPubsubUrl (ssl, host, port, appId, apikey, accessToken, uuid) {\n    let base = `ws${ssl ? 's' : ''}://${host}:${port}/ws2/${appId}/`\n    if (apikey) return base + apikey + '?' + querystring.stringify({uuid: uuid})\n    else return base + '?' + querystring.stringify({uuid: uuid})\n  }\n\n  _getApiUrl (api) {\n    let appOptions = this._getOptions()\n    if (appOptions.apiKey) return `/api/${api}/${appOptions.appId}/${appOptions.apiKey}`\n    else return `/api/${api}/${appOptions.appId}`\n  }\n\n  _getOnUrl (api) {\n    let appOptions = this._getOptions()\n    if (appOptions.apiKey) return `/on/${api}/${appOptions.appId}/${appOptions.apiKey}`\n    else return `/on/${api}/${appOptions.appId}`\n  }\n\n  _getPubsub () {\n    return this.websocket\n  }\n\n  _getRemote () {\n    return this.remote\n  }\n\n  _getOptions () {\n    return this.options\n  }\n\n  dataStore (path, options) {\n    return new DataStore(this, path, options)\n  }\n\n  grant (options, cb) {\n    let apiUrl = this._getApiUrl('grant')\n    let params = options\n    this.remote.get(apiUrl, params).then(function (result) {\n      if (result.err) {\n        cb(result.err)\n        return\n      }\n      cb(null, result.content)\n    }).catch(function (err) {\n      cb(err)\n    })\n  }\n\n  listDataStores (options, cb) {\n    let apiUrl = this._getApiUrl('ds')\n    let params = {\n      c: options.c || ''\n    }\n    params.limit = options.limit || 100\n    this._getRemote().get(apiUrl, params).then((result) => {\n      if (result.err) {\n        cb(result.err)\n      } else {\n        let dataStores = result.content\n        cb(null, dataStores)\n      }\n    }).catch(function (err) {\n      cb(err)\n    })\n  }\n\n  static history (options, cb) {\n    let appId = options.appId\n    let apiKey = options.apiKey\n    let useSSL = options.hasOwnProperty('useSSL') ? options.useSSL : true\n    let host = options.host || 'pubsub1.mlkcca.com'\n    let port = options.port || 443\n    var remote = new Remote(host, port, useSSL, {})\n    remote.get(`/api/history/${appId}/${apiKey}`, {c: options.path}).then(function (messages) {\n      cb(null, messages)\n    }).catch(function (err) {\n      cb(err)\n    })\n  }\n\n  static grant () {\n\n  }\n}\n"]}