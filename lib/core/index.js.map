{"version":3,"sources":["core/index.js"],"names":["eventId","options","appId","store","Error","uuid","apiKey","accessToken","useSSL","hasOwnProperty","host","port","keepaliveTimeout","version","websocket","_get_pubsub_url","logger","console","connect","ssl","apikey","path","cb","remote","get","c","then","messages","catch","err","getEventId","get_wsURL","topic"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;AAEA,IAAIA,UAAU,CAAd;;;AAEC,iBAAYC,OAAZ,EAAqB;AAAA;;AAEpB,OAAKC,KAAL,GAAaD,QAAQC,KAArB;AACA,OAAKC,KAAL,GAAaF,QAAQE,KAArB;AACA,MAAG,CAAC,KAAKD,KAAT,EAAgB,MAAM,IAAIE,KAAJ,CAAU,gBAAV,CAAN;AAChB,MAAG,CAAC,KAAKD,KAAT,EAAgB,MAAM,IAAIC,KAAJ,CAAU,gBAAV,CAAN;AAChB,OAAKC,IAAL,GAAYJ,QAAQI,IAApB;AACA,OAAKC,MAAL,GAAcL,QAAQK,MAAtB;AACA,OAAKC,WAAL,GAAmBN,QAAQM,WAA3B;AACA,OAAKC,MAAL,GAAcP,QAAQQ,cAAR,CAAuB,QAAvB,IAAmCR,QAAQO,MAA3C,GAAoD,IAAlE;AACA,OAAKE,IAAL,GAAYT,QAAQS,IAAR,IAAgB,oBAA5B;AACA,OAAKC,IAAL,GAAYV,QAAQU,IAAR,IAAgB,GAA5B;AACA,OAAKC,gBAAL,GAAwBX,QAAQW,gBAAR,IAA4B,GAApD;AAEA;;;;4BAES;AACT,UAAO,kBAAYC,OAAnB;AACA;;;6BAEU;AACV,UAAO,KAAKX,KAAZ;AACA;;;4BAES;AACT,QAAKY,SAAL,GAAiB,qBAAW;AAC3BJ,UAAM,KAAKK,eAAL,CAAqB,KAAKP,MAA1B,EAAkC,KAAKE,IAAvC,EAA6C,KAAKC,IAAlD,EAAwD,KAAKT,KAA7D,EAAoE,KAAKI,MAAzE,EAAiF,KAAKD,IAAtF,CADqB;AAE3BW,YAAQC;AAFmB,IAAX,CAAjB;AAIA,QAAKH,SAAL,CAAeI,OAAf;AACA;;;kCAEeC,G,EAAKT,I,EAAMC,I,EAAMT,K,EAAOkB,M,EAAQf,I,EAAM;AACrD,kBAAYc,MAAI,GAAJ,GAAQ,EAApB,YAA4BT,IAA5B,SAAoCC,IAApC,aAAgDT,KAAhD,SAAyDkB,MAAzD,cAAwEf,IAAxE;AACA;;;4BAESgB,I,EAAM;AACf,UAAO,wBAAc,KAAKP,SAAnB,EAA8BO,IAA9B,CAAP;AACA;;;0BAEO,CAEP;;;0BAEcpB,O,EAASqB,E,EAAI;AAC3B,OAAIpB,QAAQD,QAAQC,KAApB;AACA,OAAII,SAASL,QAAQK,MAArB;AACA,OAAIE,SAASP,QAAQQ,cAAR,CAAuB,QAAvB,IAAmCR,QAAQO,MAA3C,GAAoD,IAAjE;AACA,OAAIE,OAAOT,QAAQS,IAAR,IAAgB,oBAA3B;AACA,OAAIC,OAAOV,QAAQU,IAAR,IAAgB,GAA3B;AACA,OAAIY,SAAS,qBAAWb,IAAX,EAAiBC,IAAjB,EAAuBH,MAAvB,EAA+B,EAA/B,CAAb;AACAe,UAAOC,GAAP,mBAA2BtB,KAA3B,SAAoCI,MAApC,EAA8C,EAACmB,GAAExB,QAAQoB,IAAX,EAA9C,EAAgEK,IAAhE,CAAqE,UAASC,QAAT,EAAmB;AACvFL,OAAG,IAAH,EAASK,QAAT;AACA,IAFD,EAEGC,KAFH,CAES,UAASC,GAAT,EAAc;AACtBP,OAAGO,GAAH;AACA,IAJD;AAKA;;;0BAEc,CAEd;;;;;;;;;AAGF,SAASC,UAAT,GAAsB;AACrB,QAAO9B,SAAP;AACA;;AAED,SAAS+B,SAAT,CAAmBrB,IAAnB,EAAyBR,KAAzB,EAAgC8B,KAAhC,EAAuCZ,MAAvC,EAA+C;AAC7C,oBAAiBV,IAAjB,aAA6BR,KAA7B,SAAsCkB,MAAtC;AACD","file":"index.js","sourcesContent":["import packageJSON from '../../package.json';\nimport Pubsub from './pubsub';\nimport Remote from './remote';\nimport DataStore from './datastore';\n\nvar eventId = 0;\nexport default class {\n\tconstructor(options) {\n\n\t\tthis.appId = options.appId;\n\t\tthis.store = options.store;\n\t\tif(!this.appId) throw new Error('appId required');\n\t\tif(!this.store) throw new Error('store required');\n\t\tthis.uuid = options.uuid;\n\t\tthis.apiKey = options.apiKey;\n\t\tthis.accessToken = options.accessToken;\n\t\tthis.useSSL = options.hasOwnProperty('useSSL') ? options.useSSL : true;\n\t\tthis.host = options.host || 'pubsub1.mlkcca.com';\n\t\tthis.port = options.port || 443;\n\t\tthis.keepaliveTimeout = options.keepaliveTimeout || 300;\n\n\t}\n\n\tversion() {\n\t\treturn packageJSON.version;\n\t}\n\n\tgetAppId() {\n\t\treturn this.appId;\n\t}\n\n\tconnect() {\n\t\tthis.websocket = new Pubsub({\n\t\t\thost: this._get_pubsub_url(this.useSSL, this.host, this.port, this.appId, this.apiKey, this.uuid),\n\t\t\tlogger: console\n\t\t});\n\t\tthis.websocket.connect();\n\t}\n\n\t_get_pubsub_url(ssl, host, port, appId, apikey, uuid) {\n\t\treturn `ws${ssl?'s':''}://${host}:${port}/ws2/${appId}/${apikey}?uuid=${uuid}`;\n\t}\n\n\tdataStore(path) {\n\t\treturn new DataStore(this.websocket, path);\n\t}\n\n\tgrant() {\n\n\t}\n\n\tstatic history(options, cb) {\n\t\tlet appId = options.appId;\n\t\tlet apiKey = options.apiKey;\n\t\tlet useSSL = options.hasOwnProperty('useSSL') ? options.useSSL : true;\n\t\tlet host = options.host || 'pubsub1.mlkcca.com';\n\t\tlet port = options.port || 443;\n\t\tvar remote = new Remote(host, port, useSSL, {});\n\t\tremote.get(`/api/history/${appId}/${apiKey}`, {c:options.path}).then(function(messages) {\n\t\t\tcb(null, messages);\n\t\t}).catch(function(err) {\n\t\t\tcb(err);\n\t\t});\n\t}\n\n\tstatic grant() {\n\n\t}\n}\n\nfunction getEventId() {\n\treturn eventId++;\n}\n\nfunction get_wsURL(host, appId, topic, apikey) {\n  return `http://${host}/ws2/${appId}/${apikey}?uuid=ws1`;\n}\n\n/*\n\nvar recv = 0, sended = 0, diff_list = [], span = 80, span_d = -1;\n\nsetInterval(function() {\n  console.log(span + \",\" + sended + \",\" + recv + \",\" + diff_list.reduce(function(acc, d) {return acc + d}, 0) / diff_list.length);\n  sended = 0;\n  recv = 0;\n  diff_list = [];\n  span += span_d;\n  if(span < 15) {\n  \tspan_d = 1;\n  \t//process.exit(0);\n  }else if(span > 50) {\n  \tspan_d = -1;\n  }\n}, 1000);\n\nvar host = \"localhost:8000\";\nvar appId = 'Bk9_7LVYg';\nvar apikey = \"3mmUgPBrac35mW0R4HOq0CnerFFDg7eGp3Uw-eGi\";\n//var apikey = \"eAgHtkrAOCaOdcl6QWqDE3PYZNKYMgRrPjDrYEk6\";\n\nMilkcocoa(host, \"topic1\", appId, apikey);\n\n\n\n\nfunction Milkcocoa(host, topic, appId, apikey) {\n\tvar client = new WebSocketClient();\n\n\tclient.on('connectFailed', function(error) {\n\t    console.log('Connect Error: ' + error.toString());\n\t});\n\n\tclient.on('connect', function(connection) {\n\t    console.log('WebSocket Client Connected');\n\t    connection.on('error', function(error) {\n\t        console.log(\"Connection Error: \" + error.toString());\n\t    });\n\t    connection.on('close', function() {\n\t        console.log('echo-protocol Connection Closed');\n\t    });\n\t    connection.on('message', function(message) {\n\t    \tconsole.log(message);\n\t    \tvar payload = JSON.parse(message.utf8Data);\n\t    \tif(payload.message) {\n\t\t    var start = JSON.parse(payload.message);\n\t\t    var end = new Date().getTime();\n\t\t    var diff = end - start;\n\t\t    diff_list.push(diff);\n\t\t    recv++\n\n\t    \t}\n\n\t        //console.log(message);\n\t        if (message.type === 'utf8') {\n\t            console.log(\"Received: '\" + message.utf8Data + \"'\");\n\t        }\n\t        //setTimeout(sendNumber, 10);\n\t    });\n\n\t    function sendNumber() {\n\t        if (connection.connected) {\n\t        \tsended++;\n\t            var start = new Date().getTime();\n\t            connection.sendUTF(JSON.stringify({\n\t\t        \te: getEventId(),\n\t            \tp: 'topic',\n\t            \t_t: 'p',\n\t            \t_o: '_p',\n\t            \tv: 'value'\n\t            }));\n\t        }\n\t        setTimeout(sendNumber, span);\n\t    }\n        connection.sendUTF(JSON.stringify({\n        \te: getEventId(),\n        \tp: 'topic',\n        \t_t: 's',\n        \t_o: '_p'\n        }));\n\t    sendNumber();\n\t});\n\n\tclient.connect(get_wsURL(host, appId, topic, apikey));\n}\n\nfunction getEventId() {\n\treturn eventId++;\n}\n\nfunction get_wsURL(host, appId, topic, apikey) {\n  return `http://${host}/ws2/${appId}/${apikey}?uuid=ws1`;\n}\n*/"]}