{"version":3,"sources":["core/ws.js"],"names":["isBrowser","process","title","EventEmitter","require","Module","host","options","client","onerror","fire","onclose","e","emit","code","onopen","onmessage","msg","data","on","readyState","send","params","reason","close","removeAllListeners"],"mappings":";;;;;;;;;;;;;;AAAA,IAAIA,YAAa,cAAcC,QAAQC,KAAvC;;AAEA,IAAIC,eAAeC,QAAQ,QAAR,EAAkBD,YAArC;;;;;AAGC,iBAAYE,MAAZ,EAAoBC,IAApB,EAA0BC,OAA1B,EAAmC;AAAA;;AAAA;;AAElC,MAAGP,SAAH,EAAc;AACb,SAAKQ,MAAL,GAAc,IAAIH,MAAJ,CAAWC,IAAX,CAAd;AACA,SAAKE,MAAL,CAAYC,OAAZ,GAAsB,MAAKC,IAAL,CAAU,OAAV,CAAtB;AACA,SAAKF,MAAL,CAAYG,OAAZ,GAAsB,UAACC,CAAD,EAAK;AAAC,UAAKC,IAAL,CAAU,OAAV,EAAmBD,EAAEE,IAArB;AAA2B,IAAvD;AACA,SAAKN,MAAL,CAAYO,MAAZ,GAAqB,MAAKL,IAAL,CAAU,MAAV,CAArB;AACA,SAAKF,MAAL,CAAYQ,SAAZ,GAAwB,UAACC,GAAD,EAAS;AAChC,QAAGA,IAAIC,IAAJ,IAAY,MAAf,EAAuB,MAAKL,IAAL,CAAU,MAAV,EAAkBI,IAAIC,IAAtB,EAAvB,KACK,MAAKL,IAAL,CAAU,SAAV,EAAqBI,IAAIC,IAAzB;AACL,IAHD;AAIA,GATD,MASK;AACJ,SAAKV,MAAL,GAAc,IAAIH,MAAJ,CAAWC,IAAX,EAAiBC,OAAjB,CAAd;AACA,SAAKC,MAAL,CAAYW,EAAZ,CAAe,OAAf,EAAwB,MAAKT,IAAL,CAAU,OAAV,CAAxB;AACA,SAAKF,MAAL,CAAYW,EAAZ,CAAe,OAAf,EAAwB,MAAKT,IAAL,CAAU,OAAV,CAAxB;AACA,SAAKF,MAAL,CAAYW,EAAZ,CAAe,MAAf,EAAuB,MAAKT,IAAL,CAAU,MAAV,CAAvB;AACA,SAAKF,MAAL,CAAYW,EAAZ,CAAe,SAAf,EAA0B,UAACD,IAAD,EAAU;AACnC,QAAGA,QAAQ,MAAX,EAAmB,MAAKL,IAAL,CAAU,MAAV,EAAkBK,IAAlB,EAAnB,KACK,MAAKL,IAAL,CAAU,SAAV,EAAqBK,IAArB;AACL,IAHD;AAIA;AApBiC;AAqBlC;;;;kCAEe;AACf,UAAO,KAAKV,MAAL,CAAYY,UAAnB;AACA;;;uBAEIH,G,EAAK;AACT,QAAKT,MAAL,CAAYa,IAAZ,CAAiBJ,GAAjB;AACA;;;uBAEIA,G,EAAK;AACT,QAAKT,MAAL,CAAYa,IAAZ,CAAiB,MAAjB;AACA;;;uBAEIT,C,EAAG;AAAA;;AACP,UAAO,UAACU,MAAD,EAAY;AAClB,WAAKT,IAAL,CAAUD,CAAV,EAAaU,MAAb;AACA,IAFD;AAGA;;;wBAEKR,I,EAAMS,M,EAAQ;AACnB,QAAKf,MAAL,CAAYgB,KAAZ,CAAkBV,IAAlB,EAAwBS,MAAxB;AACA;;;0BAEO;AACP,QAAKE,kBAAL,CAAwB,OAAxB;AACA,QAAKA,kBAAL,CAAwB,OAAxB;AACA,QAAKA,kBAAL,CAAwB,MAAxB;AACA,QAAKA,kBAAL,CAAwB,SAAxB;AACA;;;;EAnD2BtB,Y","file":"ws.js","sourcesContent":["let isBrowser = ('browser' === process.title);\n\nlet EventEmitter = require(\"events\").EventEmitter;\n\nexport default class extends EventEmitter {\n\tconstructor(Module, host, options) {\n\t\tsuper();\n\t\tif(isBrowser) {\n\t\t\tthis.client = new Module(host);\n\t\t\tthis.client.onerror = this.fire('error');\n\t\t\tthis.client.onclose = (e)=>{this.emit('close', e.code)}\n\t\t\tthis.client.onopen = this.fire('open');\n\t\t\tthis.client.onmessage = (msg) => {\n\t\t\t\tif(msg.data == 'pong') this.emit('pong', msg.data);\n\t\t\t\telse this.emit('message', msg.data);\n\t\t\t}\n\t\t}else{\n\t\t\tthis.client = new Module(host, options);\n\t\t\tthis.client.on('error', this.fire('error'));\n\t\t\tthis.client.on('close', this.fire('close'));\n\t\t\tthis.client.on('open', this.fire('open'));\n\t\t\tthis.client.on('message', (data) => {\n\t\t\t\tif(data == 'pong') this.emit('pong', data);\n\t\t\t\telse this.emit('message', data);\n\t\t\t});\n\t\t}\n\t}\n\n\tgetReadyState() {\n\t\treturn this.client.readyState;\n\t}\n\n\tsend(msg) {\n\t\tthis.client.send(msg);\n\t}\n\n\tping(msg) {\n\t\tthis.client.send(\"ping\");\n\t}\n\n\tfire(e) {\n\t\treturn (params) => {\n\t\t\tthis.emit(e, params)\n\t\t}\n\t}\n\n\tclose(code, reason) {\n\t\tthis.client.close(code, reason);\n\t}\n\n\tclean() {\n\t\tthis.removeAllListeners('error');\n\t\tthis.removeAllListeners('close');\n\t\tthis.removeAllListeners('open');\n\t\tthis.removeAllListeners('message');\n\t}\n}\n\n"]}