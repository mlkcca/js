{"version":3,"sources":["core/datastore.js"],"names":["root","path","_options","options","setDataType","datatype","Error","event","cb","onComplete","_get_pubsub","subscribe","message","decode","value","publish","apiUrl","_get_api_url","params","c","limit","order","ts","_get_remote","get","then","messages","catch","err"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;;AAGC,iBAAYA,IAAZ,EAAkBC,IAAlB,EAAwBC,QAAxB,EAAkC;AAAA;;AACjC,OAAKF,IAAL,GAAYA,IAAZ;AACA,OAAKC,IAAL,GAAYA,IAAZ;AACA,MAAIE,UAAUD,YAAY,EAA1B;AACA,OAAKE,WAAL,CAAiBD,QAAQE,QAAR,IAAoB,MAArC;AACA;;;;8BAEWA,Q,EAAU;AACrB,OAAGA,YAAY,MAAZ,IAAsBA,YAAY,MAAlC,IAA4CA,YAAY,QAA3D,EAAqE;AACpE,UAAM,IAAIC,KAAJ,CAAU,kBAAV,CAAN;AACA;AACD,QAAKD,QAAL,GAAgBA,QAAhB;AACA;;;qBAEEE,K,EAAOC,E,EAAIC,U,EAAY;AAAA;;AACzB,OAAGF,SAAS,MAAZ,EAAoB;AACnB,SAAKP,IAAL,CAAUU,WAAV,GAAwBC,SAAxB,CAAkC,KAAKV,IAAvC,EAA6C,IAA7C,EAAmD,UAACW,OAAD,EAAa;AAC/DJ,QAAG,eAAaK,MAAb,CAAoBD,OAApB,EAA6B,MAAKP,QAAlC,CAAH;AACA,KAFD,EAEGI,UAFH;AAGA,IAJD,MAIM,IAAGF,SAAS,MAAZ,EAAoB;AACzB,SAAKP,IAAL,CAAUU,WAAV,GAAwBC,SAAxB,CAAkC,KAAKV,IAAvC,EAA6C,IAA7C,EAAmD,UAACW,OAAD,EAAa;AAC/DJ,QAAG,eAAaK,MAAb,CAAoBD,OAApB,EAA6B,MAAKP,QAAlC,CAAH;AACA,KAFD,EAEGI,UAFH;AAGA;AACD;;;uBAEIK,K,EAAOX,O,EAASK,E,EAAI;AACxB,OAAG,OAAOL,OAAP,KAAmB,UAAtB,EAAkC;AACjCK,SAAKL,OAAL;AACA;AACD,QAAKH,IAAL,CAAUU,WAAV,GAAwBK,OAAxB,CAAgC,KAAKd,IAArC,EAA2C,IAA3C,EAAiDa,KAAjD,EAAwDN,EAAxD;AACA;;;uBAEIM,K,EAAON,E,EAAI;AACf,QAAKR,IAAL,CAAUU,WAAV,GAAwBK,OAAxB,CAAgC,KAAKd,IAArC,EAA2C,IAA3C,EAAiDa,KAAjD,EAAwDN,EAAxD;AACA;;;0BAEOL,O,EAASK,E,EAAI;AACpB,OAAIQ,SAAS,KAAKhB,IAAL,CAAUiB,YAAV,CAAuB,SAAvB,CAAb;AACA,OAAIC,SAAS;AACZC,OAAE,KAAKlB;AADK,IAAb;AAGA,OAAGE,QAAQiB,KAAX,EAAkBF,OAAOE,KAAP,GAAejB,QAAQiB,KAAvB;AAClB,OAAGjB,QAAQkB,KAAX,EAAkBH,OAAOG,KAAP,GAAelB,QAAQkB,KAAvB;AAClB,OAAGlB,QAAQmB,EAAX,EAAeJ,OAAOI,EAAP,GAAYnB,QAAQmB,EAApB;;AAGf,QAAKtB,IAAL,CAAUuB,WAAV,GAAwBC,GAAxB,CAA4BR,MAA5B,EAAoCE,MAApC,EAA4CO,IAA5C,CAAiD,UAASC,QAAT,EAAmB;AACnElB,OAAG,IAAH,EAASkB,QAAT;AACA,IAFD,EAEGC,KAFH,CAES,UAASC,GAAT,EAAc;AACtBpB,OAAGoB,GAAH;AACA,IAJD;AAKA","file":"datastore.js","sourcesContent":["import PushDataType from './datatypes/push';\nimport SendDataType from './datatypes/send';\n\nexport default class {\n\tconstructor(root, path, _options) {\n\t\tthis.root = root;\n\t\tthis.path = path;\n\t\tlet options = _options || {};\n\t\tthis.setDataType(options.datatype || 'json');\n\t}\n\n\tsetDataType(datatype) {\n\t\tif(datatype != 'text' && datatype != 'json' && datatype == 'binary') {\n\t\t\tthrow new Error('invalid datatype');\n\t\t}\n\t\tthis.datatype = datatype;\n\t}\n\n\ton(event, cb, onComplete) {\n\t\tif(event == 'push') {\n\t\t\tthis.root._get_pubsub().subscribe(this.path, '_p', (message) => {\n\t\t\t\tcb(PushDataType.decode(message, this.datatype));\n\t\t\t}, onComplete);\n\t\t}else if(event == 'send') {\n\t\t\tthis.root._get_pubsub().subscribe(this.path, '_s', (message) => {\n\t\t\t\tcb(SendDataType.decode(message, this.datatype));\n\t\t\t}, onComplete);\n\t\t}\n\t}\n\n\tpush(value, options, cb) {\n\t\tif(typeof options === 'function') {\n\t\t\tcb = options;\n\t\t}\n\t\tthis.root._get_pubsub().publish(this.path, '_p', value, cb);\n\t}\n\n\tsend(value, cb) {\n\t\tthis.root._get_pubsub().publish(this.path, '_s', value, cb);\n\t}\n\n\thistory(options, cb) {\n\t\tlet apiUrl = this.root._get_api_url('history');\n\t\tlet params = {\n\t\t\tc:this.path\n\t\t}\n\t\tif(options.limit) params.limit = options.limit;\n\t\tif(options.order) params.order = options.order;\n\t\tif(options.ts) params.ts = options.ts;\n\n\n\t\tthis.root._get_remote().get(apiUrl, params).then(function(messages) {\n\t\t\tcb(null, messages);\n\t\t}).catch(function(err) {\n\t\t\tcb(err);\n\t\t});\n\t}\n\n}\n"]}