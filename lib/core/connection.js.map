{"version":3,"sources":["core/connection.js"],"names":["WebSocketClient","client","conn","on","error","console","log","toString","message","payload","JSON","parse","utf8Data","close","sendNumber","connection","connected","sended","start","Date","getTime","sendUTF","stringify","e","getEventId","p","_t","_o","v","setTimeout","span","data"],"mappings":";;;;;;;;AAAA;;;;;;;;AAEA,IAAMA,kBAAkB,oBAAUC,MAAlC;;;AAGC,uBAAYC,IAAZ,EAAkB;AAAA;;AACjB,mBAAKA,IAAL,GAAYA,IAAZ;AACA;;;;qCAEM;AACH,0BAAKA,IAAL,CAAUC,EAAV,CAAa,OAAb,EAAsB,UAASC,KAAT,EAAgB;AAClCC,oCAAQC,GAAR,CAAY,uBAAuBF,MAAMG,QAAN,EAAnC;AACH,sBAFD;AAGA,0BAAKL,IAAL,CAAUC,EAAV,CAAa,OAAb,EAAsB,YAAW;AAC7BE,oCAAQC,GAAR,CAAY,iCAAZ;AACH,sBAFD;AAGA,0BAAKJ,IAAL,CAAUC,EAAV,CAAa,SAAb,EAAwB,UAASK,OAAT,EAAkB;AACzC,gCAAIC,UAAUC,KAAKC,KAAL,CAAWH,QAAQI,QAAnB,CAAd;AACA,sBAFD;AAGA,0BAAKV,IAAL,CAAUW,KAAV;;AAEA,8BAASC,UAAT,GAAsB;AAClB,gCAAIC,WAAWC,SAAf,EAA0B;AACzBC;AACG,uCAAIC,QAAQ,IAAIC,IAAJ,GAAWC,OAAX,EAAZ;AACAL,8CAAWM,OAAX,CAAmBX,KAAKY,SAAL,CAAe;AACpCC,6CAAGC,YADiC;AAEjCC,6CAAG,OAF8B;AAGjCC,8CAAI,GAH6B;AAIjCC,8CAAI,IAJ6B;AAKjCC,6CAAG;AAL8B,oCAAf,CAAnB;AAOH;AACDC,uCAAWf,UAAX,EAAuBgB,IAAvB;AACH;AACE,0BAAK5B,IAAL,CAAUmB,OAAV,CAAkBX,KAAKY,SAAL,CAAe;AAChCC,+BAAGC,YAD6B;AAEhCC,+BAAG,OAF6B;AAGhCC,gCAAI,GAH4B;AAIhCC,gCAAI;AAJ4B,sBAAf,CAAlB;AAMHb;AAEH;;;mCAEIiB,I,EAAM;AACJ,0BAAK7B,IAAL,CAAUmB,OAAV,CAAkBX,KAAKY,SAAL,CAAeS,IAAf,CAAlB;AACN;;;sCAEO;AACD,0BAAK7B,IAAL,CAAUW,KAAV;AACN","file":"connection.js","sourcesContent":["import WebSocket from 'websocket';\n\nconst WebSocketClient = WebSocket.client;\n\nexport default class {\n\tconstructor(conn) {\n\t\tthis.conn = conn;\n\t}\n\n\tinit() {\n\t    this.conn.on('error', function(error) {\n\t        console.log(\"Connection Error: \" + error.toString());\n\t    });\n\t    this.conn.on('close', function() {\n\t        console.log('echo-protocol Connection Closed');\n\t    });\n\t    this.conn.on('message', function(message) {\n\t    \tvar payload = JSON.parse(message.utf8Data);\n\t    });\n\t    this.conn.close()\n\n\t    function sendNumber() {\n\t        if (connection.connected) {\n\t        \tsended++;\n\t            var start = new Date().getTime();\n\t            connection.sendUTF(JSON.stringify({\n\t\t        \te: getEventId(),\n\t            \tp: 'topic',\n\t            \t_t: 'p',\n\t            \t_o: '_p',\n\t            \tv: 'value'\n\t            }));\n\t        }\n\t        setTimeout(sendNumber, span);\n\t    }\n        this.conn.sendUTF(JSON.stringify({\n        \te: getEventId(),\n        \tp: 'topic',\n        \t_t: 's',\n        \t_o: '_p'\n        }));\n\t    sendNumber();\n\n\t}\n\n\tsend(data) {\n        this.conn.sendUTF(JSON.stringify(data));\t\t\n\t}\n\n\tclose() {\n        this.conn.close();\t\t\n\t}\n\n}\n"]}