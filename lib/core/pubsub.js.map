{"version":3,"sources":["core/pubsub.js"],"names":["EventEmitter","require","SubscriberManager","root","op","subscribers","timestamp","caller","path","cb","onComplete","on","_startSubscribe","Object","keys","_stopSubscribe","apiUrl","_get_on_url","pathList","_get_path_list","length","join","_get_remote","get2","assign","c","t","err","res","setTimeout","forEach","key","reverse","map","m","v","id","emit","abort","removeListener","removeAllListeners","topic","message","options","host","logger","subscriberMan","push","set","send","offlineQueue","messageStore","wsOptions","reconnectPeriod","reconnectTimer","pingTimer","pongArrived","state","event","params","result","getState","offline","connecting","online","disconnecting","console","error","currentState","nextState","log","warn","flushOfflineMessage","_setupPingTimer","_clean","_setupReconnect","code","_disconnect","sendEvent","_options","JSON","stringify","rid","add","_get_api_url","retryTimer","get","then","recvAck","clearTimeout","catch","enq","mes","reg","unreg","_connect","e","_resetPingInterval","deliver","p","_t","_o","client","close","clean","clear","keepalive","_checkPing","reschedule","ping"],"mappings":"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","file":"pubsub.js","sourcesContent":["import MessageStore from './MessageStore'\nimport reInterval from 'reinterval'\nlet EventEmitter = require(\"events\").EventEmitter;\n\nclass SubscriberManager extends EventEmitter {\n\tconstructor(root, op) {\n\t\tsuper();\n\t\tthis.root = root;\n\t\tthis.op = op;\n\t\tthis.subscribers = {};\n\t\tthis.timestamp = 0;\n\t\tthis.caller = null;\n\t}\n\n\treg(path, cb, onComplete) {\n\t\tthis.subscribers[path] = {cb:cb};\n\t\tthis.on(path, cb);\n\t\tthis._startSubscribe(onComplete);\n\t}\n\n\t_get_path_list() {\n\t\treturn Object.keys(this.subscribers);\n\t}\n\n\t_startSubscribe(onComplete) {\n\t\tthis._stopSubscribe()\n\t\tlet apiUrl = this.root._get_on_url(this.op || 'push');\n\t\tlet pathList = this._get_path_list();\n\t\tif(pathList.length == 0) return;\n\t\tlet path = pathList.join(',');\n\t\tthis.caller = this.root._get_remote().get2(apiUrl, Object.assign({c:path,t:this.timestamp}, {}), (err, res) => {\n\t\t\tif(err) {\n\t\t\t\tif(onComplete) onComplete(err);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis._startSubscribe();\n\t\t\t\t}, 5000);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(res.err) {\n\t\t\t\tif(res.err == 'permission_denied') {\n\t\t\t\t\tif(onComplete) onComplete(res.err);\n\t\t\t\t}else{\n\t\t\t\t\tif(onComplete) onComplete(res.err);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tObject.keys(res).forEach((key) => {\n\t\t\t\t\tif(this.timestamp < res[key][0][0])\n\t\t\t\t\t\tthis.timestamp = res[key][0][0];\n\t\t\t\t\tres[key].reverse().map((m) => {\n\t\t\t\t\t\tif(m.length == 2) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tt: m[0],\n\t\t\t\t\t\t\t\tv: m[1]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}else if(m.length == 3) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tid: m[1],\n\t\t\t\t\t\t\t\tt: m[0],\n\t\t\t\t\t\t\t\tv: m[2]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}).forEach((m) => {\n\t\t\t\t\t\tthis.emit(key, m);\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\tthis._startSubscribe()\n\t\t\t}\n\n\t\t});\n\t}\n\n\t_stopSubscribe() {\n\t\tif(this.caller) this.caller.abort();\n\t}\n\n\tunreg(path, cb) {\n\t\tdelete this.subscribers[path];\n\t\tif(cb) {\n\t\t\tthis.removeListener(path, cb);\n\t\t}else{\n\t\t\tthis.removeAllListeners(path);\n\t\t}\n\t}\n\n\tdeliver(topic, message) {\n\t\tthis.emit(topic, message);\n\t}\n\n\tget() {\n\t\treturn Object.keys(this.subscribers).map((topic) => {\n\t\t\treturn this.subscribers[topic];\n\t\t});\n\t}\n}\n\n\n\n/*\n * state offline -> connecting -> online -> disconnecting -> offline\n *  offline -> connecting\n *  connecting -> online\n *             -> offline\n *  online     -> disconnecting\n *  online     -> offline\n *  disconnecting -> offline\n */\n\nexport default class extends EventEmitter {\n\tconstructor(options, root) {\n\t\tsuper();\n\t\tthis.options = options;\n\t\tthis.root = root;\n\t\tthis.host = options.host;\n\t\tthis.logger = options.logger;\n\t\tthis.subscriberMan = {};\n\t\tthis.subscriberMan.push = new SubscriberManager(root, 'push');\n\t\tthis.subscriberMan.set = new SubscriberManager(root, 'set');\n\t\tthis.subscriberMan.send = new SubscriberManager(root, 'send');\n\t\tthis.offlineQueue = [];\n\t\tthis.messageStore = new MessageStore();\n\t\tthis.wsOptions = options.wsOptions;\n\t\tthis.reconnectPeriod = options.reconnectPeriod || 5000;\n\t\tthis.reconnectTimer = null;\n\t\tthis.pingTimer = null;\n\t\tthis.pongArrived = true;\n\t\tthis.state = 'offline';\n\t}\n\n\tsendEvent(event, params) {\n\t\tlet result = null;\n\t\tswitch(this.getState()) {\n\t\t\tcase 'offline':\n\t\t\t\tresult = this.offline(event, params);\n\t\t\t\tbreak;\n\t\t\tcase 'connecting':\n\t\t\t\tresult = this.connecting(event, params);\n\t\t\t\tbreak;\n\t\t\tcase 'online':\n\t\t\t\tresult = this.online(event, params);\n\t\t\t\tbreak;\n\t\t\tcase 'disconnecting':\n\t\t\t\tresult = this.disconnecting(event, params);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.error('unknow state');\n\t\t}\n\t\tif(result) {\n\t\t\tthis.emit('state-changed', {\n\t\t\t\tcurrentState: this.state,\n\t\t\t\tnextState: result.nextState\n\t\t\t});\n\t\t\tthis.logger.log('state changed from ' + this.state + ' to ' + result.nextState);\n\t\t\tthis.state = result.nextState;\n\t\t}\n\t}\n\n\tgetState() {\n\t\treturn this.state;\n\t}\n\n\toffline(event) {\n\t\tif(event == 'connect') {\n\t\t\t//this._connect();\n\t\t\treturn {\n\t\t\t\tnextState: 'connecting'\n\t\t\t}\n\t\t}else{\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tconnecting(event, params) {\n\t\tif(event == 'connect') {\n\t\t\tthis.logger.warn('already connecting');\n\t\t\treturn null;\n\t\t}else if(event == 'opened') {\n\t\t\t//open\n\t\t\tthis.emit('open', {});\n\t\t\t/*\n\t\t\tthis.subscriberMan.get().map((s) => {\n\t\t\t\tthis._subscribe(s.path, s.op, s.cb);\n\t\t\t});\n\t\t\t*/\n\t\t\tthis.flushOfflineMessage();\n\t\t\tthis._setupPingTimer();\n\t\t\treturn {\n\t\t\t\tnextState: 'online'\n\t\t\t}\n\t\t}else if(event == 'error') {\n\t\t\tthis._clean();\n\t\t\tthis._setupReconnect();\n\t\t\treturn null;\n\t\t}else if(event == 'closed') {\n\t\t\tthis._clean();\n\t\t\tif(params.code > 1000) {\n\t\t\t\tthis._setupReconnect();\n\t\t\t\treturn null;\n\t\t\t}else{\n\t\t\t\treturn {\n\t\t\t\t\tnextState: 'offline'\n\t\t\t\t}\n\t\t\t}\n\t\t}else{\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tonline(event, params) {\n\t\tif(event == 'connect') {\n\t\t\tthis.logger.warn('already connected');\n\t\t\treturn null;\n\t\t}else if(event == 'opened') {\n\t\t\tthis.logger.warn('already connected');\n\t\t\treturn null;\n\t\t}else if(event == 'error') {\n\t\t\tthis._clean();\n\t\t\tthis._setupReconnect();\n\t\t\treturn {\n\t\t\t\tnextState: 'connecting'\n\t\t\t}\n\t\t}else if(event == 'closed') {\n\t\t\tthis._clean();\n\t\t\tif(params.code > 1000) {\n\t\t\t\tthis._setupReconnect();\n\t\t\t\treturn {\n\t\t\t\t\tnextState: 'connecting'\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\treturn {\n\t\t\t\t\tnextState: 'offline'\n\t\t\t\t}\n\t\t\t}\n\t\t}else if(event == 'disconnect') {\n\t\t\tthis._disconnect();\n\t\t\treturn {\n\t\t\t\tnextState: 'disconnecting'\n\t\t\t}\n\t\t}else{\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tdisconnecting(event) {\n\t\tif(event == 'error' || event == 'closed') {\n\t\t\tthis._clean();\n\t\t\treturn {\n\t\t\t\tnextState: 'offline'\n\t\t\t}\n\t\t}else{\n\t\t\tthis.logger.warn('now disconnecting');\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/* API */\n\tconnect() {\n\t\tthis.sendEvent('connect', {});\n\t}\n\n\tdisconnect() {\n\t\tthis.sendEvent('disconnect', {});\n\t}\n\n\tpublish(path, op, v, cb, _options) {\n\t\tlet options = _options || {};\n\n\t\tv = JSON.stringify(v);\n\t\tlet rid = this.messageStore.add({path:path,op:op,v:v,options:_options}, cb);\n\t\tlet apiUrl = this.root._get_api_url(op || 'push');\n\t\tlet retryTimer = setTimeout(() => {\n\t\t\tthis.flushOfflineMessage(() => {\n\t\t\t});\n\t\t}, 10000);\n\t\tthis.root._get_remote().get(apiUrl, Object.assign({c:path,v:v}, _options)).then((res) => {\n\t\t\tthis.messageStore.recvAck(rid, res);\n\t\t\tclearTimeout(retryTimer);\n\t\t\t//cb(null, res);\n\t\t}).catch(function(err) {\n\t\t\tcb(err);\n\t\t});\n\t}\n\n\t/* connect時に呼ばれる */\n\tflushOfflineMessage(cb) {\n\t\tlet message = this.messageStore.enq();\n\t\tif(message) {\n\t\t\tlet mes = message.message;\n\t\t\tlet rid = message.id;\n\t\t\tlet apiUrl = this.root._get_api_url(mes.op || 'push');\n\t\t\tthis.root._get_remote().get(apiUrl, Object.assign({c:mes.path,v:mes.v}, mes.options)).then((res) => {\n\t\t\t\tthis.messageStore.recvAck(rid, res);\n\t\t\t\tthis.flushOfflineMessage(cb);\n\t\t\t}).catch(function(err) {\n\t\t\t\tcb(err);\n\t\t\t});\n\t\t}else{\n\t\t\tcb(null);\n\t\t}\n\t}\n\n\tsubscribe(path, op, cb, onComplete) {\n\t\tthis.subscriberMan[op].reg(path, cb, onComplete);\n\t\t//this._subscribe(path, op, cb, onComplete);\n\t}\n\n\tunsubscribe(path, op, cb) {\n\t\tthis.subscriberMan[op].unreg(path, cb);\n\t}\n\n\t/* private API */\n\n\n\t_setupReconnect() {\n\t\tsetTimeout(() => {\n\t\t\tthis._connect();\n\t\t}, this.reconnectPeriod);\n\t}\n\n\tresponse(message) {\n\t\tthis.messageStore.recvAck(message.e, message);\n\t}\n\n\tdeliver(message) {\n\t\tthis._resetPingInterval();\n\t\tthis.subscriberMan.deliver(message.p, message);\n\t}\n\n\t_subscribe(path, op, cb, onComplete) {\n\t\tthis.send({\n        \tp: path,\n        \t_t: 's',\n        \t_o: op\n\t\t}, onComplete);\n\t}\n\n\tsend(message, cb) {\n\t\tthis.messageStore.add(message, cb);\n\t\tif(this.client && this.getState() == 'online') {\n\t\t\tthis.client.send(JSON.stringify(message));\n\t\t\tthis._resetPingInterval();\n\t\t}\n\t}\n\n\n\t_clean() {\n\t\tthis.client.close();\n\t\tthis.client.clean();\n\t\tthis.client = null;\n\t\tif (this.pingTimer !== null) {\n\t\t\tthis.pingTimer.clear()\n\t\t\tthis.pingTimer = null\n\t\t}\n\t\tthis.emit('close', {});\n\t}\n\n\t_setupPingTimer() {\n\t\tif (!this.pingTimer && this.options.keepalive) {\n\t\t\tthis.pongArrived = true\n\t\t\tthis.pingTimer = reInterval(() => {\n\t\t\t\tthis._checkPing()\n\t\t\t}, this.options.keepalive * 1000)\n\t\t}\n\t}\n\n\t_resetPingInterval() {\n\t\tif (this.pingTimer && this.options.keepalive) {\n\t\t\tthis.pingTimer.reschedule(this.options.keepalive * 1000)\n\t\t}\n\t}\n\n\t_checkPing() {\n\t\tif (this.pongArrived) {\n\t\t\tthis.pongArrived = false\n\t\t\tthis.client.ping()\n\t\t} else {\n\t\t\tthis.sendEvent('error', {message: 'pong not coming'});\n\t\t}\n\t}\n\n\t_handlePong() {\n\t\tthis.pongArrived = true\n\t}\n\n}\n"]}