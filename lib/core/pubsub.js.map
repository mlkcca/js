{"version":3,"sources":["core/pubsub.js"],"names":["WebSocket","require","EventEmitter","SubscriberManager","root","op","subscribers","timestamp","caller","path","cb","onComplete","on","_startSubscribe","Object","keys","_stopSubscribe","apiUrl","_get_on_url","pathList","_get_path_list","length","join","_get_remote","get2","assign","c","t","err","res","setTimeout","forEach","key","reverse","map","m","id","v","emit","abort","removeListener","removeAllListeners","topic","message","options","target","host","logger","subscriberMan","push","set","send","offlineQueue","messageStore","wsOptions","reconnectPeriod","reconnectTimer","pingTimer","pongArrived","state","event","params","result","getState","offline","connecting","online","disconnecting","console","error","currentState","nextState","log","warn","flushOfflineMessage","_setupPingTimer","_clean","_setupReconnect","code","_disconnect","sendEvent","_options","JSON","stringify","rid","add","_get_api_url","get","then","recvAck","catch","enq","mes","reg","unreg","client","utf8message","parse","hasOwnProperty","response","deliver","_handlePong","close","_connect","e","_resetPingInterval","p","_t","_o","clean","clear","keepalive","_checkPing","reschedule","ping"],"mappings":"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","file":"pubsub.js","sourcesContent":["import MessageStore from './MessageStore'\nimport reInterval from 'reinterval'\nlet WebSocket = require('./ws');\nlet EventEmitter = require(\"events\").EventEmitter;\n\nclass SubscriberManager extends EventEmitter {\n\tconstructor(root, op) {\n\t\tsuper();\n\t\tthis.root = root;\n\t\tthis.op = op;\n\t\tthis.subscribers = {};\n\t\tthis.timestamp = 0;\n\t\tthis.caller = null;\n\t}\n\n\treg(path, cb, onComplete) {\n\t\tthis.subscribers[path] = {cb:cb};\n\t\tthis.on(path, cb);\n\t\tthis._startSubscribe(onComplete);\n\t}\n\n\t_get_path_list() {\n\t\treturn Object.keys(this.subscribers);\n\t}\n\n\t_startSubscribe(onComplete) {\n\t\tthis._stopSubscribe()\n\t\tlet apiUrl = this.root._get_on_url(this.op || 'push');\n\t\tlet pathList = this._get_path_list();\n\t\tif(pathList.length == 0) return;\n\t\tlet path = pathList.join(',');\n\t\tthis.caller = this.root._get_remote().get2(apiUrl, Object.assign({c:path,t:this.timestamp}, {}), (err, res) => {\n\t\t\tif(err) {\n\t\t\t\tif(onComplete) onComplete(err);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis._startSubscribe();\n\t\t\t\t}, 5000);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(res.err) {\n\t\t\t\tif(res.err == 'permission_denied') {\n\t\t\t\t\tif(onComplete) onComplete(res.err);\n\t\t\t\t}else{\n\t\t\t\t\tif(onComplete) onComplete(res.err);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tObject.keys(res).forEach((key) => {\n\t\t\t\t\tif(this.timestamp < res[key][0][0])\n\t\t\t\t\t\tthis.timestamp = res[key][0][0];\n\t\t\t\t\tres[key].reverse().map((m) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tid: m[1],\n\t\t\t\t\t\t\tt: m[0],\n\t\t\t\t\t\t\tv: m[2]\n\t\t\t\t\t\t}\n\t\t\t\t\t}).forEach((m) => {\n\t\t\t\t\t\tthis.emit(key, m);\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\tthis._startSubscribe()\n\t\t\t}\n\n\t\t});\n\t}\n\n\t_stopSubscribe() {\n\t\tif(this.caller) this.caller.abort();\n\t}\n\n\tunreg(path, cb) {\n\t\tdelete this.subscribers[path];\n\t\tif(cb) {\n\t\t\tthis.removeListener(path, cb);\n\t\t}else{\n\t\t\tthis.removeAllListeners(path);\n\t\t}\n\t}\n\n\tdeliver(topic, message) {\n\t\tthis.emit(topic, message);\n\t}\n\n\tget() {\n\t\treturn Object.keys(this.subscribers).map((topic) => {\n\t\t\treturn this.subscribers[topic];\n\t\t});\n\t}\n}\n\n\n\n/*\n * state offline -> connecting -> online -> disconnecting -> offline\n *  offline -> connecting\n *  connecting -> online\n *             -> offline\n *  online     -> disconnecting\n *  online     -> offline\n *  disconnecting -> offline\n */\n\nexport default class extends EventEmitter {\n\tconstructor(options, root) {\n\t\tsuper();\n\t\tthis.options = options;\n\t\tthis.root = root;\n\t\tthis.target = options.WebSocket;\n\t\tthis.host = options.host;\n\t\t//this.client = new WebSocketClient();\n\t\tthis.logger = options.logger;\n\t\tthis.subscriberMan = {};\n\t\tthis.subscriberMan.push = new SubscriberManager(root, 'push');\n\t\tthis.subscriberMan.set = new SubscriberManager(root, 'set');\n\t\tthis.subscriberMan.send = new SubscriberManager(root, 'send');\n\t\tthis.offlineQueue = [];\n\t\tthis.messageStore = new MessageStore();\n\t\tthis.wsOptions = options.wsOptions;\n\t\tthis.reconnectPeriod = options.reconnectPeriod || 5000;\n\t\tthis.reconnectTimer = null;\n\t\tthis.pingTimer = null;\n\t\tthis.pongArrived = true;\n\t\tthis.state = 'offline';\n\t}\n\n\tsendEvent(event, params) {\n\t\tlet result = null;\n\t\tswitch(this.getState()) {\n\t\t\tcase 'offline':\n\t\t\t\tresult = this.offline(event, params);\n\t\t\t\tbreak;\n\t\t\tcase 'connecting':\n\t\t\t\tresult = this.connecting(event, params);\n\t\t\t\tbreak;\n\t\t\tcase 'online':\n\t\t\t\tresult = this.online(event, params);\n\t\t\t\tbreak;\n\t\t\tcase 'disconnecting':\n\t\t\t\tresult = this.disconnecting(event, params);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.error('unknow state');\n\t\t}\n\t\tif(result) {\n\t\t\tthis.emit('state-changed', {\n\t\t\t\tcurrentState: this.state,\n\t\t\t\tnextState: result.nextState\n\t\t\t});\n\t\t\tthis.logger.log('state changed from ' + this.state + ' to ' + result.nextState);\n\t\t\tthis.state = result.nextState;\n\t\t}\n\t}\n\n\tgetState() {\n\t\treturn this.state;\n\t}\n\n\toffline(event) {\n\t\tif(event == 'connect') {\n\t\t\t//this._connect();\n\t\t\treturn {\n\t\t\t\tnextState: 'connecting'\n\t\t\t}\n\t\t}else{\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tconnecting(event, params) {\n\t\tif(event == 'connect') {\n\t\t\tthis.logger.warn('already connecting');\n\t\t\treturn null;\n\t\t}else if(event == 'opened') {\n\t\t\t//open\n\t\t\tthis.emit('open', {});\n\t\t\t/*\n\t\t\tthis.subscriberMan.get().map((s) => {\n\t\t\t\tthis._subscribe(s.path, s.op, s.cb);\n\t\t\t});\n\t\t\t*/\n\t\t\tthis.flushOfflineMessage();\n\t\t\tthis._setupPingTimer();\n\t\t\treturn {\n\t\t\t\tnextState: 'online'\n\t\t\t}\n\t\t}else if(event == 'error') {\n\t\t\tthis._clean();\n\t\t\tthis._setupReconnect();\n\t\t\treturn null;\n\t\t}else if(event == 'closed') {\n\t\t\tthis._clean();\n\t\t\tif(params.code > 1000) {\n\t\t\t\tthis._setupReconnect();\n\t\t\t\treturn null;\n\t\t\t}else{\n\t\t\t\treturn {\n\t\t\t\t\tnextState: 'offline'\n\t\t\t\t}\n\t\t\t}\n\t\t}else{\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tonline(event, params) {\n\t\tif(event == 'connect') {\n\t\t\tthis.logger.warn('already connected');\n\t\t\treturn null;\n\t\t}else if(event == 'opened') {\n\t\t\tthis.logger.warn('already connected');\n\t\t\treturn null;\n\t\t}else if(event == 'error') {\n\t\t\tthis._clean();\n\t\t\tthis._setupReconnect();\n\t\t\treturn {\n\t\t\t\tnextState: 'connecting'\n\t\t\t}\n\t\t}else if(event == 'closed') {\n\t\t\tthis._clean();\n\t\t\tif(params.code > 1000) {\n\t\t\t\tthis._setupReconnect();\n\t\t\t\treturn {\n\t\t\t\t\tnextState: 'connecting'\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\treturn {\n\t\t\t\t\tnextState: 'offline'\n\t\t\t\t}\n\t\t\t}\n\t\t}else if(event == 'disconnect') {\n\t\t\tthis._disconnect();\n\t\t\treturn {\n\t\t\t\tnextState: 'disconnecting'\n\t\t\t}\n\t\t}else{\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tdisconnecting(event) {\n\t\tif(event == 'error' || event == 'closed') {\n\t\t\tthis._clean();\n\t\t\treturn {\n\t\t\t\tnextState: 'offline'\n\t\t\t}\n\t\t}else{\n\t\t\tthis.logger.warn('now disconnecting');\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/* API */\n\tconnect() {\n\t\tthis.sendEvent('connect', {});\n\t}\n\n\tdisconnect() {\n\t\tthis.sendEvent('disconnect', {});\n\t}\n\n\tpublish(path, op, v, cb, _options) {\n\t\tlet options = _options || {};\n\n\t\tthis.flushOfflineMessage(() => {\n\t\t\tv = JSON.stringify(v);\n\t\t\tlet rid = this.messageStore.add({path:path,op:op,v:v,options:_options}, cb);\n\t\t\tlet apiUrl = this.root._get_api_url(op || 'push');\n\t\t\tthis.root._get_remote().get(apiUrl, Object.assign({c:path,v:v}, _options)).then((res) => {\n\t\t\t\tthis.messageStore.recvAck(rid, res);\n\t\t\t\t//cb(null, res);\n\t\t\t}).catch(function(err) {\n\t\t\t\tcb(err);\n\t\t\t});\n\t\t});\n\t}\n\n\t/* connect時に呼ばれる */\n\tflushOfflineMessage(cb) {\n\t\tlet message = this.messageStore.enq();\n\t\tif(message) {\n\t\t\tlet mes = message.message;\n\t\t\tlet rid = message.id;\n\t\t\tlet apiUrl = this.root._get_api_url(mes.op || 'push');\n\t\t\tthis.root._get_remote().get(apiUrl, Object.assign({c:mes.path,v:mes.v}, mes.options)).then((res) => {\n\t\t\t\tthis.messageStore.recvAck(rid, res);\n\t\t\t\tthis.flushOfflineMessage(cb);\n\t\t\t}).catch(function(err) {\n\t\t\t\tcb(err);\n\t\t\t});\n\t\t}else{\n\t\t\tcb(null);\n\t\t}\n\t}\n\n\tsubscribe(path, op, cb, onComplete) {\n\t\tthis.subscriberMan[op].reg(path, cb, onComplete);\n\t\t//this._subscribe(path, op, cb, onComplete);\n\t}\n\n\tunsubscribe(path, op, cb) {\n\t\tthis.subscriberMan[op].unreg(path, cb);\n\t}\n\n\t/* private API */\n\n\t_connect() {\n\t\tthis.client = new WebSocket(this.target, this.host, this.wsOptions);\n\t\tthis.client.on('error', (error) => {\n\t\t\tthis.logger.error(error);\n\t\t\tthis.sendEvent('error', {});\n\t\t});\n\n\t\tthis.client.on('close', (code) => {\n\t\t\tthis.logger.log('closed', code);\n\t\t\tthis.sendEvent('closed', {code: code});\n\t\t});\n\n\t\tthis.client.on('open', () => {\n\t\t\tthis.sendEvent('opened', {});\n\t\t});\n\n\t\tthis.client.on('message', (utf8message) => {\n\t\t\tlet message = JSON.parse(utf8message);\n\t\t\tif(message.hasOwnProperty('e')) {\n\t\t\t\tthis.response(message);\n\t\t\t}else{\n\t\t\t\tthis.deliver(message);\t\n\t\t\t}\n\t\t});\n\n\t\tthis.client.on('pong', () => {\n\t\t\tthis._handlePong();\n\t\t})\n\t}\n\n\t_disconnect() {\n\t\tthis.client.close();\n\t}\n\n\t_setupReconnect() {\n\t\tsetTimeout(() => {\n\t\t\tthis._connect();\n\t\t}, this.reconnectPeriod);\n\t}\n\n\tresponse(message) {\n\t\tthis.messageStore.recvAck(message.e, message);\n\t}\n\n\tdeliver(message) {\n\t\tthis._resetPingInterval();\n\t\tthis.subscriberMan.deliver(message.p, message);\n\t}\n\n\t_subscribe(path, op, cb, onComplete) {\n\t\tthis.send({\n        \tp: path,\n        \t_t: 's',\n        \t_o: op\n\t\t}, onComplete);\n\t}\n\n\tsend(message, cb) {\n\t\tthis.messageStore.add(message, cb);\n\t\tif(this.client && this.getState() == 'online') {\n\t\t\tthis.client.send(JSON.stringify(message));\n\t\t\tthis._resetPingInterval();\n\t\t}\n\t}\n\n\n\t_clean() {\n\t\tthis.client.close();\n\t\tthis.client.clean();\n\t\tthis.client = null;\n\t\tif (this.pingTimer !== null) {\n\t\t\tthis.pingTimer.clear()\n\t\t\tthis.pingTimer = null\n\t\t}\n\t\tthis.emit('close', {});\n\t}\n\n\t_setupPingTimer() {\n\t\tif (!this.pingTimer && this.options.keepalive) {\n\t\t\tthis.pongArrived = true\n\t\t\tthis.pingTimer = reInterval(() => {\n\t\t\t\tthis._checkPing()\n\t\t\t}, this.options.keepalive * 1000)\n\t\t}\n\t}\n\n\t_resetPingInterval() {\n\t\tif (this.pingTimer && this.options.keepalive) {\n\t\t\tthis.pingTimer.reschedule(this.options.keepalive * 1000)\n\t\t}\n\t}\n\n\t_checkPing() {\n\t\tif (this.pongArrived) {\n\t\t\tthis.pongArrived = false\n\t\t\tthis.client.ping()\n\t\t} else {\n\t\t\tthis.sendEvent('error', {message: 'pong not coming'});\n\t\t}\n\t}\n\n\t_handlePong() {\n\t\tthis.pongArrived = true\n\t}\n\n}\n"]}