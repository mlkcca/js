{"version":3,"sources":["core/ajax.js"],"names":["http","require","https","querystring","Agent","HttpsAgent","keepaliveAgent","maxSockets","maxFreeSockets","timeout","freeSocketKeepAliveTimeout","keepaliveHttpsAgent","request","method","secure","host","port","path","qs","payload","headers","callback","httpClient","stringify","options","hostname","agent","get","processResponse","on","e","req","setTimeout","Error","abort","err","write","end","res","content","str","r","JSON","parse","requestBrowser","_port","url","xhr","createCORSRequest","withCredentials","onload","parsed","responseText","onerror","statusText","headerKey","setRequestHeader","send","process","title","module","exports","XMLHttpRequest","open","XDomainRequest"],"mappings":"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","file":"ajax.js","sourcesContent":["var http = require('http')\nvar https = require('https')\nvar querystring = require('querystring')\nvar Agent = require('agentkeepalive')\nvar HttpsAgent = Agent.HttpsAgent\n\nconst keepaliveAgent = new Agent({\n  maxSockets: 100,\n  maxFreeSockets: 10,\n  timeout: 300000,\n  freeSocketKeepAliveTimeout: 30000\n})\n\nconst keepaliveHttpsAgent = new HttpsAgent({\n  maxSockets: 100,\n  maxFreeSockets: 10,\n  timeout: 300000,\n  freeSocketKeepAliveTimeout: 30000\n})\n\n/*\n  method\n  utl\n  params\n  callback\n  secure\n*/\nfunction request (method, secure, host, port, path, qs, payload, headers, callback) {\n  var httpClient = secure ? https : http\n  // headers['Content-Type'] = 'application/x-www-form-urlencoded';\n\n  if (qs) {\n    path += '?' + querystring.stringify(qs)\n  }\n  // console.log('path', method, path, payload);\n\n  var options = {\n    hostname: host,\n    port: port || (secure ? 443 : 80),\n    path: path,\n    method: method,\n    headers: headers,\n    agent: secure ? keepaliveHttpsAgent : keepaliveAgent\n  }\n\n  if (method === 'GET') {\n    return httpClient.get(options, processResponse)\n            .on('error', function (e) {\n              callback(e)\n            })\n  } else {\n    var req = httpClient.request(options, processResponse)\n    req.setTimeout(120000)\n    req.on('timeout', function () {\n      if (callback) callback(new Error('timed out'), null)\n      req.abort()\n    })\n    req.on('error', function (err) {\n      if (callback) callback(err, null)\n    })\n    req.write(payload)\n    req.end()\n    return req\n  }\n\n  function processResponse (res) {\n    if (callback) {\n      var content = ''\n      res.on('data', function (str) {\n        content += str\n      })\n      res.on('end', function () {\n        let r = null\n        try {\n          r = JSON.parse(content)\n        } catch (e) {\n          callback(e)\n        }\n        if (r) { callback(null, r) }\n      })\n    }\n  }\n}\n\nfunction requestBrowser (method, secure, host, _port, path, qs, payload, headers, callback) {\n  let port = _port || (secure ? 443 : 80)\n  var url = (secure ? 'https://' : 'http://') + host + ':' + port + path\n  if (qs) {\n    url += '?' + querystring.stringify(qs)\n  }\n  var xhr = createCORSRequest(method, url)\n  xhr.withCredentials = true\n  xhr.onload = function () {\n    try {\n      var parsed = JSON.parse(xhr.responseText)\n      callback(null, parsed)\n    } catch (e) {\n      callback(null, JSON.parse(xhr.responseText))\n    }\n  }\n  xhr.onerror = function () {\n    callback(xhr.statusText || 'unknown error')\n  }\n  // xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n  for (var headerKey in headers) {\n    xhr.setRequestHeader(headerKey, headers[headerKey])\n  }\n\n  xhr.send(payload)\n}\n\nif (process.title !== 'browser') {\n  module.exports = {\n    request: request\n  }\n} else {\n  module.exports = {\n    request: requestBrowser\n  }\n}\n\nfunction createCORSRequest (method, url) {\n  var xhr = new XMLHttpRequest()\n  if ('withCredentials' in xhr) {\n    xhr.open(method, url, true)\n  } else if (typeof XDomainRequest !== 'undefined') {\n    xhr = new XDomainRequest()\n    xhr.open(method, url)\n  } else {\n    xhr = null\n  }\n  return xhr\n}\n"]}