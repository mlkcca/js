{"version":3,"sources":["core/ajax.js"],"names":["http","require","https","querystring","Agent","HttpsAgent","keepaliveAgent","maxSockets","maxFreeSockets","timeout","freeSocketKeepAliveTimeout","keepaliveHttpsAgent","request","method","secure","host","port","path","qs","payload","headers","callback","http_client","stringify","options","hostname","agent","get","process_response","on","e","req","setTimeout","Error","abort","err","write","end","res","content","str","JSON","parse","requestBrowser","_port","url","xhr","createCORSRequest","withCredentials","onload","decoded","parsed","responseText","onerror","statusText","header_key","setRequestHeader","send","process","title","module","exports","XMLHttpRequest","open","XDomainRequest"],"mappings":"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","file":"ajax.js","sourcesContent":["var http = require(\"http\"),\n    https = require('https'),\n    querystring = require(\"querystring\"),\n    Agent = require('agentkeepalive'),\n    HttpsAgent = Agent.HttpsAgent\n\nconst keepaliveAgent = new Agent({\n  maxSockets: 100,\n  maxFreeSockets: 10,\n  timeout: 300000,\n  freeSocketKeepAliveTimeout: 30000,\n});\n\nconst keepaliveHttpsAgent = new HttpsAgent({\n  maxSockets: 100,\n  maxFreeSockets: 10,\n  timeout: 300000,\n  freeSocketKeepAliveTimeout: 30000,\n});\n\n/*\nmethod\nutl\nparams\ncallback\nsecure\n*/\nfunction request(method, secure, host, port, path, qs, payload, headers, callback) {\n\tvar http_client = secure ? https : http;\n\t//headers['Content-Type'] = 'application/x-www-form-urlencoded';\n\n\tif(qs) {\n\t\tpath += \"?\" + querystring.stringify(qs);\n\t}\n\n\tvar options = {\n\t\thostname: host,\n\t\tport: port || (secure ? 443 : 80),\n\t\tpath: path,\n\t\tmethod: method,\n\t\theaders : headers,\n\t\tagent: secure?keepaliveHttpsAgent:keepaliveAgent\n\t};\n\n\tif(method == 'GET') {\n\t\treturn http_client.get(options, process_response)\n\t\t.on('error', function (e) {\n\t\t\tcallback(e);\n\t\t});\n\t}else{\n\t\tvar req = http_client.request(options, process_response);\n\t\treq.setTimeout(5000);\n\t\treq.on('timeout', function() {\n\t\t\tif(callback) callback(new Error(\"timed out\"), null);\n\t\t\treq.abort();\n\t\t});\n\t\treq.on('error', function(err) {\n\t\t\tif(callback) callback(err, null);\n\t\t});\n\t\treq.write(payload);\n\t\treq.end();\n\t\treturn req;\n\t}\n\n\tfunction process_response(res) {\n\t\tif(callback) {\n\t\t\tvar content = \"\";\n\t\t\tres.on('data', function(str) {\n\t\t\t\tcontent += str;\n\t\t\t});\n\t\t\tres.on('end', function() {\n\t\t\t\tcallback(null, JSON.parse(content));\n\t\t\t});\n\t\t}\n\t}\n}\n\nfunction requestBrowser(method, secure, host, _port, path, qs, payload, headers, callback) {\n\tlet port = _port || (secure?443:80);\n\tvar url = (secure?'https://':'http://') + host + ':' + port + path;\n\tif(qs) {\n\t\turl += \"?\" + querystring.stringify(qs);\n\t}\n\tvar xhr = createCORSRequest(method , url);\n\txhr.withCredentials = true;\n\txhr.onload = function() {\n\t\tlet decoded = \"\";\n\t\ttry{\n\t\t\tvar parsed = JSON.parse(xhr.responseText);\n    \t\tcallback(null, parsed);\n\t\t}catch(e){\n    \t\tcallback(null, JSON.parse(xhr.responseText));\n\t\t}\n\t}\n\txhr.onerror = function() {\n\t\tcallback(xhr.statusText || 'unknown error');\n\t}\n\t//xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n\tfor(var header_key in headers) {\n\t\txhr.setRequestHeader(header_key, headers[header_key]);\n\t}\n\n\txhr.send(payload);\n}\n\nif ('browser' !== process.title) {\n\tmodule.exports = {\n\t\trequest : request\n\t}\n}else{\n\tmodule.exports = {\n\t\trequest : requestBrowser\n\t}\n}\n\n\n\nfunction createCORSRequest(method, url) {\n    var xhr = new XMLHttpRequest();\n    if (\"withCredentials\" in xhr) {\n        xhr.open(method, url, true);\n    } else if (typeof XDomainRequest != \"undefined\") {\n        xhr = new XDomainRequest();\n        xhr.open(method, url);\n    } else {\n        xhr = null;\n    }\n    return xhr;\n}"]}