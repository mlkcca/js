{"version":3,"sources":["web/index.js"],"names":["packageJSON","require","store","get","key","localStorage","getItem","e","set","data","setItem","Milkcocoa","options","version","callback","Object","assign","authOptions","appId","accessToken"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;;;AACA,IAAMA,cAAcC,QAAQ,oBAAR,CAApB;;AAEA,IAAIC,QAAQ;AACVC,KADU,eACLC,GADK,EACA;AACR,QAAI;AACF,aAAOC,aAAaC,OAAb,CAAqBF,GAArB,CAAP;AACD,KAFD,CAEE,OAAOG,CAAP,EAAU;AACV,aAAO,IAAP;AACD;AACF,GAPS;AASVC,KATU,eASLJ,GATK,EASAK,IATA,EASM;AACd,QAAI;AACF,aAAOJ,aAAaK,OAAb,CAAqBN,GAArB,EAA0BK,IAA1B,CAAP;AACD,KAFD,CAEE,OAAOF,CAAP,EAAU;AACV,aAAO,IAAP;AACD;AACF;AAfS,CAAZ;;IAkBqBI,S;;;AACnB,qBAAaC,OAAb,EAAsB;AAAA;;AACpBA,YAAQV,KAAR,GAAgBA,KAAhB;AADoB,iHAEdU,OAFc;AAGrB;;;;8BAEU;AACT,aAAOZ,YAAYa,OAAnB;AACD;;;sCAEyBD,O,EAASE,S,EAAU;AAC3C,mCAAkBC,OAAOC,MAAP,CAAc,EAAd,EAAkBJ,QAAQK,WAA1B,EAAuC,EAACC,OAAON,QAAQM,KAAhB;AACvDJ,kBAAU,kBAAUK,WAAV,EAAuB;AAC/BL,oBAAS,IAAT,EAAe,IAAIH,SAAJ,CAAcI,OAAOC,MAAP,CAAc,EAAd,EAAkBJ,OAAlB,EAA2B,EAACO,aAAaA,WAAd,EAA3B,CAAd,CAAf;AACD,SAHsD,EAAvC,CAAlB;AAID;;;;;;kBAfkBR,S","file":"index.js","sourcesContent":["import MilkcocoaCore from '../core'\nimport {authWithMilkcocoa} from './auth'\nconst packageJSON = require('../../package.json')\n\nlet store = {\n  get (key) {\n    try {\n      return localStorage.getItem(key)\n    } catch (e) {\n      return null\n    }\n  },\n\n  set (key, data) {\n    try {\n      return localStorage.setItem(key, data)\n    } catch (e) {\n      return null\n    }\n  }\n}\n\nexport default class Milkcocoa extends MilkcocoaCore {\n  constructor (options) {\n    options.store = store\n    super(options)\n  }\n\n  version () {\n    return packageJSON.version\n  }\n\n  static authWithMilkcocoa (options, callback) {\n    authWithMilkcocoa(Object.assign({}, options.authOptions, {appId: options.appId,\n      callback: function (accessToken) {\n        callback(null, new Milkcocoa(Object.assign({}, options, {accessToken: accessToken})))\n      }}))\n  }\n}\n"]}